% Generated by roxygen2: do not edit by hand
<<<<<<< HEAD
% Please edit documentation in R/Bed_SV_Comp_WIP.r
=======
% Please edit documentation in R/Bed_SV_Comp.r
>>>>>>> 04c1b43bc3aded9fbd47aace30093a5b16389a06
\name{nonOverlapGenes}
\alias{nonOverlapGenes}
\title{Calculates Genes that are near to the SV region}
\usage{
<<<<<<< HEAD
nonOverlapGenes(
  bed,
  chrom,
  startpos,
  chrom2,
  endpos,
  svid,
  n = 3,
  SVTyp,
  bperrorindel = 3000,
  bperrorinvtrans = 10000
)
=======
nonOverlapGenes(bed, chrom, startpos, endpos, svid, n = 3)
>>>>>>> 04c1b43bc3aded9fbd47aace30093a5b16389a06
}
\arguments{
\item{bed}{Text Bionano Bed file.}

\item{chrom}{character SVmap chromosome.}

\item{startpos}{numeric starting position of the breakpoints.}

<<<<<<< HEAD
\item{chrom2}{character SVmap 2nd chromosome.}

=======
>>>>>>> 04c1b43bc3aded9fbd47aace30093a5b16389a06
\item{endpos}{numeric end position of the breakpoints.}

\item{svid}{numeric Structural variant identifier (Bionano generated).}

<<<<<<< HEAD
\item{n}{numeric Number of genes to report which are nearest to the breakpoint.
Default is 3.}

\item{bperrorindel}{Numeric. base pair error indel.}

\item{bperrorinvtrans}{Numeric. base pair error invtranslocation.}
=======
\item{n}{numeric Number of genes to report which are nearest to the 
breakpoint.
Default is 3.}
>>>>>>> 04c1b43bc3aded9fbd47aace30093a5b16389a06
}
\value{
Data Frame. Contains the SVID,Gene name,strand information and
Distance from the SV covered.
}
\description{
Calculates Genes that are near to the SV region
}
\examples{
<<<<<<< HEAD
smapName="F1.1_GM24385_DLE-1_P_trio_hg19.smap"
smap = system.file("extdata", smapName, package="nanotatoR")
bedFile <- system.file("extdata", "Homo_sapiens.Hg19.bed", package="nanotatoR")
=======
smapName="F1.1_TestSample1_solo_hg19.smap"
smap = system.file("extdata", smapName, package="nanotatoR")
bedFile <- system.file("extdata", "Homo_sapiens.Hg19.bed", 
package="nanotatoR")
>>>>>>> 04c1b43bc3aded9fbd47aace30093a5b16389a06
bed<-buildrunBNBedFiles(bedFile,returnMethod="dataFrame")
smap<-readSMap(smap)
chrom<-smap$RefcontigID1
startpos<-smap$RefStartPos
endpos<-smap$RefEndPos
if (length(grep("SVIndex",names(smap)))>0){
<<<<<<< HEAD
       svid <- smap$SVIndex
   }else{
    svid <- smap$SmapEntryID
    }
=======
   svid <- smap$SVIndex
 }else{
 svid <- smap$SmapEntryID
 }
>>>>>>> 04c1b43bc3aded9fbd47aace30093a5b16389a06
n<-3
nonOverlapGenes(bed, chrom, startpos, endpos, svid,n)
}
