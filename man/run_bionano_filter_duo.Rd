% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterread_Duo.r
\name{run_bionano_filter_duo}
\alias{run_bionano_filter_duo}
\title{Getting the data from annotated smaps to extract SV
information based on type of variants.}
\usage{
run_bionano_filter_duo(
  input_fmt_geneList = c("Text", "dataFrame"),
  input_fmt_svMap = c("Text", "dataFrame"),
  SVFile = NULL,
  svData,
  dat_geneList,
  fileName,
  outpath,
  outputFilename = "",
  RZIPpath,
  outputType = c("Excel", "csv"),
  primaryGenesPresent = TRUE,
  fileprefix,
  directoryName
)
}
\arguments{
\item{input_fmt_geneList}{character. Choice of gene list input
Text or Dataframe.}

\item{input_fmt_svMap}{character. Choice of gene list input
Text or Dataframe.}

\item{SVFile}{character. SV file name.}

\item{svData}{Dataframe Input data containing SV data.}

\item{dat_geneList}{Dataframe Input data containing geneList data.}

\item{fileName}{Character Name of file containing Gene List data.}

\item{outpath}{Character Directory to the output file.}

\item{outputFilename}{Character Output filename.}

\item{RZIPpath}{Character Path for the Rtools Zip package.}

\item{outputType}{Character. Variants in excel tabs or in different csv files.
Options Excel or csv.}

\item{primaryGenesPresent}{boolean Checks whether the primary gene List is present or not.}

\item{fileprefix}{Character. Prefix to use for each of the files in the directory.}

\item{directoryName}{Character. Directory name where individual SV files will be stored.}
}
\value{
Excel file containing the annotated SV map, tabs divided based on
type of SVs.
}
\description{
Getting the data from annotated smaps to extract SV
information based on type of variants.
}
\examples{
\dontrun{
terms <- "Muscle Weakness"
gene <- gene_list_generation(
  method = "Single", term = terms,
  returnMethod_GeneList = "dataFrame"
)
smapName <- "F1.1_GM24385_DLE-1_P_trio_hg19.smap"
smappath <- system.file("extdata", smapName, package = "nanotatoR")
nanotatoR_main(smap, bed,
  inputfmtBed = c("BNBED"),
  n = 3, mergedFiles, buildSVInternalDB = TRUE, soloPath, solopattern,
  input_fmt_INF = c("dataframe"), returnMethod_GeneList = c("dataframe"),
  returnMethod_bedcomp = c("dataframe"), returnMethod_DGV = c("dataframe"),
  returnMethod_Internal = c("dataframe"), input_fmt_DGV = c("dataframe"),
  hgpath, smapName, method = c("Single"), term, thresh = 5,
  input_fmt_geneList = c("dataframe"), input_fmt_svMap = c("dataframe"),
  svData, dat_geneList, outpath = "", outputFilename = "", RZIPpath = ""
)
}
}
